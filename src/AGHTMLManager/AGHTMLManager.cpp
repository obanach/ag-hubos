#include "AGHTMLManager.h"

AGHTMLManager::AGHTMLManager(){};

String AGHTMLManager::getWiFiFormCSS() {
    return 
        "<style>"
        "body {"
        "    font-family: 'Roboto', sans-serif;"
        "    padding: 20px;"
        "    background-color: #f5f5f5;"
        "}"
        ".container {"
        "    background-color: white;"
        "    padding: 20px;"
        "    border-radius: 8px;"
        "    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);"
        "    max-width: 500px;"
        "    margin: auto;"
        "}"
        "h1 {"
        "    color: #388e3c;"
        "    margin: auto;"
        "    margin-bottom: 20px;"
        "    text-align: center;"
        "}"
        ".form-group {"
        "    margin-bottom: 15px;"
        "}"
        ".form-group label {"
        "    display: block;"
        "    margin-bottom: 5px;"
        "}"
        ".form-control {"
        "    width: 100%;"
        "    padding: 10px;"
        "    border: 1px solid #ccc;"
        "    border-radius: 4px;"
        "    box-sizing: border-box;"
        "}"
        ".btn {"
        "    padding: 10px 15px;"
        "    width: 100%;"
        "    box-sizing: border-box;"
        "    border: none;"
        "    border-radius: 4px;"
        "    cursor: pointer;"
        "    font-size: 16px;"
        "    text-transform: uppercase;"
        "}"
        ".btn-primary {"
        "    background-color: #4CAF50;"
        "    color: white;"
        "}"
        ".btn-secondary {"
        "    margin-top: 8px;"
        "    background-color: #e0e0e0;"
        "    color: black;"
        "}"
        ".dropdown select {"
        "    width: 100%;"
        "    padding: 10px;"
        "    border: 1px solid #ccc;"
        "    border-radius: 4px;"
        "    background-color: white;"
        "    box-sizing: border-box;"
        "    font-size: 16px;"
        "}"
        ".dropdown select:focus {"
        "    outline: none;"
        "    border-color: #4CAF50;"
        "}"
        "</style>";
}

String AGHTMLManager::getWiFiForm(String dropdownHTML) 
{  
    return "<!DOCTYPE html>"
        "<html>"
        "<head>"
        "<title>AutoGrow HUB Connection</title>"
        "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
        + getWiFiFormCSS() +
        "</head>"
        "<body>"
        "<div class='container'>"
        "    <h1>AutoGrow HUB Connection</h1>"
        "    <p>Enter the SSID and password of the network you want the device to connect to.</p>"
        "    <form action='/configure' method='post'>"
        "        <div class='form-group'>"
        "            <label for='ssid'>SSID:</label>"
        "            <div class='dropdown'>"
                        + dropdownHTML +
        "            </div>"
        "        </div>"
        "        <div class='form-group'>"
        "            <label for='password'>Password:</label>"
        "            <input type='password' id='password' name='password' class='form-control'>"
        "        </div>"
        "        <button type='submit' class='btn btn-primary'>Submit</button>"
        "    </form>"
        "    <button type='button' class='btn btn-secondary' onclick=\"window.location.href='/refresh';\">Refresh Network List</button>"
        "</div>"
        "</body>"
        "</html>";
}

String AGHTMLManager::getConfigurePage() {
    return "<!DOCTYPE html><html><head><title>Error</title>"
           "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
           "<style>"
           "body {"
           "    font-family: Arial, sans-serif;"
           "    padding: 20px;"
           "    background-color: #f5f5f5;"
           "}"
           "h1 {"
           "    color: #d32f2f;"
           "}"
           "p {"
           "    color: #666;"
           "}"
           ".container {"
           "    background-color: white;"
           "    padding: 20px;"
           "    border-radius: 8px;"
           "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
           "    text-align: center;"
           "    max-width: 300px;"
           "    margin: auto;"
           "}"
           "a {"
           "    width: 100%;"
           "    padding: 10px;"
           "    border-radius: 4px;"
           "    border: none;"
           "    margin-bottom: 8px;"
           "    background-color: #e0e0e0;"
           "    color: black;"
           "    font-size: 18px;"
           "    display: block;"
           "    box-sizing: border-box;"
           "    cursor: pointer;"
           "    text-decoration: none;"
           "}"
           "</style>"
           "</head><body>"
           "<div class='container'>"
           "<h1>Missing SSID or Password</h1>"
           "<p>Please go back and make sure to fill both the SSID and password fields.</p>"
           "<a href='/'>Back</a>"
           "</div></body></html>";
}

String AGHTMLManager::getConnectingPage() {
    return "<!DOCTYPE html><html><head><title>Connecting...</title>"
           "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
           "<style>"
           "body {"
           "    font-family: Arial, sans-serif;"
           "    padding: 20px;"
           "    background-color: #f5f5f5;"
           "}"
           "h1 {"
           "    color: #1976d2;"
           "}"
           ".container {"
           "    background-color: white;"
           "    padding: 20px;"
           "    border-radius: 8px;"
           "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
           "    text-align: center;"
           "    max-width: 300px;"
           "    margin: auto;"
           "}"
           "</style>"
           "</head>"
           "<body>"
           "<div class='container'>"
           "<h1>Connecting...</h1>"
           "<script>"
           "setInterval(function() {"
           "    fetch('/status').then(response => response.json()).then(data => {"
           "        if (data.connected) {"
           "            window.location.href = '/success';"
           "        } else if (data.failed) {"
           "            window.location.href = '/failure';"
           "        }"
           "    });"
           "}, 5000);"
           "</script>"
           "</div></body></html>";
}

String AGHTMLManager::getFailurePage() {
    return "<!DOCTYPE html><html><head><title>Failure</title>"
           "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
           "<style>"
           "body {"
           "    font-family: Arial, sans-serif;"
           "    padding: 20px;"
           "    background-color: #f5f5f5;"
           "}"
           "h1 {"
           "    color: #d32f2f;"
           "}"
           "p {"
           "    color: #666;"
           "}"
           ".container {"
           "    background-color: white;"
           "    padding: 20px;"
           "    border-radius: 8px;"
           "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
           "    text-align: center;"
           "    max-width: 300px;"
           "    margin: auto;"
           "}"
           "a {"
           "    width: 100%;"
           "    padding: 10px;"
           "    border-radius: 4px;"
           "    border: none;"
           "    margin-bottom: 8px;"
           "    background-color: #e0e0e0;"
           "    color: black;"
           "    font-size: 18px;"
           "    display: block;"
           "    box-sizing: border-box;"
           "    cursor: pointer;"
           "    text-decoration: none;"
           "}"
           "</style>"
           "</head><body>"
           "<div class='container'>"
           "<h1>Failed to Connect</h1>"
           "<p>Check your credentials and try again.</p>"
           "<a href='/'>Back</a>"
           "</div></body></html>";
}

String AGHTMLManager::getScanningPage() {
    return "<!DOCTYPE html><html><head><title>Scanning</title>"
           "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
           "<script>"
           "    window.onload = function() {"
           "        setTimeout(function() {"
           "            window.location.reload();"
           "        }, 5000);"
           "    };"
           "</script>"
           "<style>"
           "body {"
           "    font-family: Arial, sans-serif;"
           "    padding: 20px;"
           "    background-color: #f5f5f5;"
           "}"
           "h1 {"
           "    color: #ffa000;"
           "}"
           "p {"
           "    color: #666;"
           "}"
           ".container {"
           "    background-color: white;"
           "    padding: 20px;"
           "    border-radius: 8px;"
           "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
           "    text-align: center;"
           "    max-width: 300px;"
           "    margin: auto;"
           "}"
           "</style>"
           "</head><body>"
           "<div class='container'>"
           "<h1>Scanning for Networks</h1>"
           "<p>The page will refresh automatically. If that doesn't happen, please refresh in a moment.</p>"
           "</div></body></html>";
}

String AGHTMLManager::getModulesPage() {
    String html = "<!DOCTYPE html><html><head><title>Modules</title>"
        "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
        "<style>"
        "body {"
        "    font-family: Arial, sans-serif;"
        "    padding: 20px;"
        "    background-color: #f5f5f5;"
        "}"
        ".module {"
        "    background-color: #FFFFFF;"
        "    border: 1px solid #DDD;"
        "    padding: 10px;"
        "    margin-bottom: 10px;"
        "    border-radius: 4px;"
        "    cursor: pointer;"
        "}"
        ".module:hover {"
        "    background-color: #EEE;"
        "}"
        "h1 {"
        "    color: #333;"
        "}"
        "h2 {"
        "    color: #444;"
        "}"
        "h3 {"
        "    color: #555;"
        "}"
        "button {"
        "    padding: 10px;"
        "    background-color: #4CAF50;"
        "    color: white;"
        "    border: none;"
        "    border-radius: 4px;"
        "    cursor: pointer;"
        "}"
        "button:hover {"
        "    background-color: #45a049;"
        "}"
        "</style>"
        "</head><body>"
        "<h1>Available Modules</h1>";

    std::vector<AGModule> modules = AGModuleManager::instance->getDiscoveredModuleList();
    std::vector<AGModule> connectedModules = AGModuleManager::instance->getConnectedModuleList();

    if(modules.size() == 0 && connectedModules.size() == 0) {
        html += "<h2>No modules found :(</h2>"
        "<h3>Please refresh the page in a moment.</h3>"
        "<h3>If the issue persists, please make sure that the module you'd like to add is powered on an in range.</h3>";
    } else {
        // Display Connected and Nearby Modules
        html += "<h2>Connected and working:</h2>";
        for (const auto& module : modules) {
            for (const auto& connectedModule : connectedModules) {
                if (module.isMacAddressEqual(connectedModule.macAddress)) {
                    html += "<div class='module' onclick=\"window.location.href='module?mac=" + macToString(module.macAddress) + "'\">"
                        "<h2>" + module.name + " (" + module.type + ")</h2>"
                        "<p>MAC: " + macToString(module.macAddress) + "</p>"
                        "</div>";
                    break;
                }
            }
        }

        // Display Connected, but Not Nearby Modules
        html += "<h2>Connected, but unreachable:</h2>";
        for (const auto& connectedModule : connectedModules) {
            bool isNearby = false;
            for (const auto& module : modules) {
                if (connectedModule.isMacAddressEqual(module.macAddress)) {
                    isNearby = true;
                    break;
                }
            }
            if (!isNearby) {
                html += "<div class='module' onclick=\"window.location.href='module?mac=" + macToString(connectedModule.macAddress) + "'\">"
                    "<h2>" + connectedModule.name + " (" + connectedModule.type + ")</h2>"
                    "<p>MAC: " + macToString(connectedModule.macAddress) + "</p>"
                    "</div>";
            }
        }

        // Display Not Connected Modules
        html += "<h2>Not connected:</h2>";
        for (const auto& module : modules) {
            bool isConnected = false;
            for (const auto& connectedModule : connectedModules) {
                if (module.isMacAddressEqual(connectedModule.macAddress)) {
                    isConnected = true;
                    break;
                }
            }
            if (!isConnected) {
                html += "<div class='module' onclick=\"window.location.href='module?mac=" + macToString(module.macAddress) + "'\">"
                    "<h2>" + module.name + " (" + module.type + ")</h2>"
                    "<p>MAC: " + macToString(module.macAddress) + "</p>"
                    "</div>";
            }
        }
    }

    // Adding the 'Done' button
    html += "<button onclick=\"window.location.href='modulesDone'\">Done</button>";

    html += "</body></html>";

    return html;
}


String AGHTMLManager::getCodeInputPage() {
    return 
    "<!DOCTYPE html>"
    "<html>"
    "<head>"
    "<title>Verification Code</title>"
    "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    "<style>"
        "body {"
        "    font-family: Arial, sans-serif;"
        "    padding: 20px;"
        "    background-color: #f5f5f5;"
        "}"
        "h1 {"
        "    color: #388e3c;"
        "    margin: auto;"
        "    margin-bottom: 20px;"
        "    text-align: center;"
        "}"
        "h2 {"
        "    color: #666;"
        "    margin-bottom: 20px;"
        "}"
        ".container {"
        "    background-color: white;"
        "    padding: 20px;"
        "    border-radius: 8px;"
        "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
        "    text-align: center;"
        "    max-width: 300px;"
        "    margin: auto;"
        "}"
        ".form-group {"
        "    margin-bottom: 20px;"
        "}"
        ".form-control {"
        "    width: 100%;"
        "    box-sizing: border-box;"
        "    padding: 10px;"
        "    margin-top: 10px;"
        "    border-radius: 4px;"
        "    border: 1px solid #ddd;"
        "    font-size: 18px;"
        "    text-align: center;"
        "}"
        ".btn {"
        "    width: 100%;"
        "    padding: 10px;"
        "    border-radius: 4px;"
        "    border: none;"
        "    margin-bottom: 8px;"
        "    background-color: #4CAF50;"
        "    color: white;"
        "    font-size: 18px;"
        "    display: block;"
        "    box-sizing: border-box;"
        "    cursor: pointer;"
        "    transition: background-color 0.3s;"
        "    text-decoration: none;"
        "}"
        ".btn:hover {"
        "    background-color: #45a049;"
        "}"
        ".btn-red {"
        "    background-color: #ff483b;"
        "    color: white;"
        "    margin-bottom: 0px;"
        "}"
        ".btn-red:hover {"
        "    background-color: #ff5a4d;"
        "}"
    "</style>"
    "<script>"
    "function submitCode() {"
    "    var code = document.getElementById('code').value;"
    "    var xhr = new XMLHttpRequest();"
    "    xhr.open('POST', '/submitCode', true);"
    "    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');"
    "    xhr.onreadystatechange = function() {"
    "        if (xhr.readyState == 4 && xhr.status == 200) {"
    "            document.getElementById('form-container').style.display = 'none';"
    "            document.getElementById('loading-message').style.display = 'block';"
    "            startAutoRefresh();"
    "        }"
    "    };"
    "    xhr.send('code=' + encodeURIComponent(code));"
    "}"
    "function startAutoRefresh() {"
    "    setInterval(function() {"
    "        window.location.reload();"
    "    }, 5000);"
    "}"
    "</script>"
    "</head>"
    "<body>"
    "<h1>Connected to Wi-Fi successfully!</h1>"
    "<div class='container' id='form-container'>"
    "    <h1>Verification Code</h1>"
    "    <h2>Don't know where your code is? Visit <a href='https://autogrow.pl/app'>autogrow.pl</a> to generate one.</h2>"
    "    <form action='javascript:submitCode();'>"
    "        <div class='form-group'>"
    "            <label for='code'>Enter your 6-digit code:</label>"
    "            <input type='number' id='code' min='0' max='999999' name='code' maxlength='6' pattern='\\d{6}' title='6-digit code' class='form-control' required>"
    " </div>"
    " <button type='submit' class='btn'>Submit</button>"
    " </form>"
    "<a href='/reset' class='btn btn-red'>Reset the hub</a>"
    "</div>"
    "<div class='container' id='loading-message' style='display: none;'>"
    " <h1>Pairing...</h1>"
    " <p>The page will refresh automatically. If that doesn't happen, please refresh in a moment.</p>"
    "</div>"
    "</body></html>";
}

String AGHTMLManager::getPairingSuccessPage() {
    return 
    "<!DOCTYPE html>"
    "<html>"
    "<head>"
    "<title>Success</title>"
    "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    "<style>"
    "    body { "
    "        font-family: Arial, sans-serif; "
    "        padding: 20px; "
    "        background-color: #f5f5f5; "
    "    }"
    "    h1 { "
    "        color: #388e3c; "
    "    }"
    "    .container { "
    "        background-color: white; "
    "        padding: 20px; "
    "        border-radius: 8px; "
    "        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); "
    "        text-align: center; "
    "        max-width: 300px; "
    "        margin: auto; "
    "    }"
    "    .btn {"
    "        width: 100%;"
    "        padding: 10px;"
    "        border-radius: 4px;"
    "        border: none;"
    "        margin-bottom: 8px;"
    "        background-color: #4CAF50;"
    "        color: white;"
    "        font-size: 18px;"
    "        display: block;"
    "        box-sizing: border-box;"
    "        cursor: pointer;"
    "        transition: background-color 0.3s;"
    "        text-decoration: none;"
    "    }"
    "    .btn:hover {"
    "        background-color: #45a049;"
    "    }"
    "    .btn-red {"
    "        background-color: #ff483b;"
    "        color: white;"
    "        margin-bottom: 0px;"
    "    }"
    "    .btn-red:hover {"
    "        background-color: #ff5a4d;"
    "    }"
    "</style>"
    "</head>"
    "<body>"
    "<div class='container'>"
    "    <h1>Paired with AutoGrow system successfully!</h1>"
    "    <a href='/modules' class='btn'>Add a module</a>"
    "    <a href='/reset' class='btn btn-red'>Reset the hub</a>"
    "</div>"
    "</body>"
    "</html>";
}

String AGHTMLManager::getPairingFailurePage() {
    return "<!DOCTYPE html>"
    "<html>"
    "<head>"
    "<title>Pairing Failed</title>"
    "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    "<style>"
    "body {"
    "    font-family: Arial, sans-serif;"
    "    padding: 20px;"
    "    background-color: #f5f5f5;"
    "}"
    "h1 {"
    "    color: #ff0000;"
    "}"
    "h2 {"
    "    color: #666;"
    "    margin-bottom: 20px;"
    "}"
    ".container {"
    "    background-color: white;"
    "    padding: 20px;"
    "    border-radius: 8px;"
    "    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);"
    "    text-align: center;"
    "    max-width: 300px;"
    "    margin: auto;"
    "}"
    ".form-group {"
    "    margin-bottom: 20px;"
    "}"
    ".form-control {"
    "    width: 100%;"
    "    box-sizing: border-box;"
    "    padding: 10px;"
    "    margin-top: 10px;"
    "    border-radius: 4px;"
    "    border: 1px solid #ddd;"
    "    font-size: 18px;"
    "    text-align: center;"
    "}"
    ".btn {"
    "    width: 100%;"
    "    padding: 10px;"
    "    border-radius: 4px;"
    "    border: none;"
    "    margin-bottom: 8px;"
    "    background-color: #4CAF50;"
    "    color: white;"
    "    font-size: 18px;"
    "    display: block;"
    "    box-sizing: border-box;"
    "    cursor: pointer;"
    "    transition: background-color 0.3s;"
    "    text-decoration: none;"
    "}"
    ".btn:hover {"
    "    background-color: #45a049;"
    "}"
    ".btn-red {"
    "    background-color: #ff483b;"
    "    color: white;"
    "    margin-bottom: 0px;"
    "}"
    ".btn-red:hover {"
    "    background-color: #ff5a4d;"
    "}"
    "</style>"
    "<script>"
    "function submitCode() {"
    "    var code = document.getElementById('code').value;"
    "    var xhr = new XMLHttpRequest();"
    "    xhr.open('POST', '/submitCode', true);"
    "    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');"
    "    xhr.onreadystatechange = function() {"
    "        if (xhr.readyState == 4 && xhr.status == 200) {"
    "            document.getElementById('form-container').style.display = 'none';"
    "            document.getElementById('loading-message').style.display = 'block';"
    "            startAutoRefresh();"
    "        }"
    "    };"
    "    xhr.send('code=' + encodeURIComponent(code));"
    "}"
    "function startAutoRefresh() {"
    "    setInterval(function() {"
    "        window.location.reload();"
    "    }, 5000);"
    "}"
    "</script>"
    "</head>"
    "<body>"
    "<div class='container' id='form-container'>"
    "    <h1>Pairing Failed</h1>"
    "    <h2>Please try again.</h2>"
    "    <form action='javascript:submitCode();'>"
    "        <div class='form-group'>"
    "            <label for='code'>Enter your 6-digit code:</label>"
    "            <input type='number' id='code' min='0' max='999999' name='code' maxlength='6' pattern='\\d{6}' title='6-digit code' class='form-control' required>"
    "        </div>"
    "        <button type='submit' class='btn'>Submit</button>"
    "    </form>"
    "<a href='/reset' class='btn btn-red'>Reset the hub</a>"
    "</div>"
    "<div class='container' id='loading-message' style='display: none;'>"
    "    <h1>Pairing...</h1>"
    "    <p>The page will refresh automatically. If that doesn't happen, please refresh in a moment.</p>"
    "</div>"
    "</body></html>";
}